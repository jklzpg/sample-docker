###############################################################################
#                                Sample Env                                   #
###############################################################################
version: "3.5"
services:
  #PHP fpm Service
  app-php:
    # uncomment ONLY one image:
    #image: php:7.2-fpm-alpine # uncomment for 7.2
    #image: php:7.4-fpm-alpine # uncomment for 7.4
    image: php:8.0-fpm-alpine # uncomment for 8.0
    container_name: app-php
    restart: unless-stopped
    tty: true
    volumes:
    - .:/application
    ports:
    - "9000:9000"
    working_dir: /application
    depends_on:
      - app-mysql
    networks:
      - app-network

  #Nginx Service
  app-webserver:
    image: nginx:alpine
    container_name: app-webserver
    restart: unless-stopped
    tty: true
    volumes:
      # use nginx config
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
      - .:/application
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - app-php
      - app-mysql
    networks:
      - app-network
  #MySQL Service
  app-mysql:
    image: mysql:5.6
    container_name: app-mysql
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    working_dir: /application
    volumes:
      # auto load ./docker/schema.sql on up
      - ./docker/schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - .:/application
    environment:
      MYSQL_DATABASE: database_name
      MYSQL_ROOT_PASSWORD: your_mysql_root_password
      MYSQL_USER: dev_user
      MYSQL_PASSWORD: dev_password
    networks:
      - app-network
    healthcheck:
      test: mysqladmin ping -h localhost -p$$MYSQL_ROOT_PASSWORD && test '0' -eq $$(ps aux | awk '{print $$11}' | grep -c -e '^mysql$$')
  app-redis:
    image: redis
    container_name: app-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - app-redis-data:/data
    networks:
      - app-network
#Volumes to persist
volumes:
  app-redis-data:
#Docker Networks
networks:
  app-network:
    driver: bridge
